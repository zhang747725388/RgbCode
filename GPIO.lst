C51 COMPILER V9.01   GPIO                                                                  04/28/2016 00:03:55 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN GPIO.obj
COMPILER INVOKED BY: C:\keil51\C51\BIN\C51.EXE BSP\GPIO.c BROWSE INCDIR(.\APP;.\BSP;..\..\CodeGroup;..\rgbcode) DEBUG OB
                    -JECTEXTEND PRINT(.\GPIO.lst) OBJECT(GPIO.obj)

line level    source

   1           
   2          /*************  功能说明        **************
   3          
   4           
   5           
   6          ******************************************/
   7          #include "rsystem.h"
   8          
   9          
  10          //========================================================================
  11          // 函数: u8     GPIO_Inilize(u8 GPIO, GPIO_InitTypeDef *GPIOx)
  12          // 描述: 初始化IO口.
  13          // 参数: GPIOx: 结构参数,请参考timer.h里的定义.
  14          // 返回: 成功返回0, 空操作返回1,错误返回2.
  15          // 版本: V1.0, 
  16          //========================================================================
  17          u8      GPIO_Inilize(u8 GPIO, GPIO_InitTypeDef *GPIOx)
  18          {
  19   1              if(GPIO > GPIO_P3)                              return 1;       //空操作
  20   1              if(GPIOx->Mode > GPIO_OUT_PP)   return 2;       //错误
  21   1              if(GPIO == GPIO_P0)
  22   1              {
  23   2                      if(GPIOx->Mode == GPIO_PullUp)          P0M1 &= ~GPIOx->Pin,    P0M0 &= ~GPIOx->Pin;     //上拉准双向口
  24   2                      if(GPIOx->Mode == GPIO_HighZ)             P0M1 |=  GPIOx->Pin,  P0M0 &= ~GPIOx->Pin;     //浮空输入
  25   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P0M1 |=  GPIOx->Pin,    P0M0 |=  GPIOx->Pin;     //开漏输出
  26   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P0M1 &= ~GPIOx->Pin,    P0M0 |=  GPIOx->Pin;     //推挽输出
  27   2              }
  28   1              if(GPIO == GPIO_P1)
  29   1              {
  30   2                      if(GPIOx->Mode == GPIO_PullUp)          P1M1 &= ~GPIOx->Pin,    P1M0 &= ~GPIOx->Pin;     //上拉准双向口
  31   2                      if(GPIOx->Mode == GPIO_HighZ)       P1M1 |=  GPIOx->Pin,        P1M0 &= ~GPIOx->Pin;     //浮空输入
  32   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P1M1 |=  GPIOx->Pin,    P1M0 |=  GPIOx->Pin;     //开漏输出
  33   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P1M1 &= ~GPIOx->Pin,    P1M0 |=  GPIOx->Pin;     //推挽输出
  34   2              }
  35   1              if(GPIO == GPIO_P2)
  36   1              {
  37   2                      if(GPIOx->Mode == GPIO_PullUp)          P2M1 &= ~GPIOx->Pin,    P2M0 &= ~GPIOx->Pin;     //上拉准双向口
  38   2                      if(GPIOx->Mode == GPIO_HighZ)             P2M1 |=  GPIOx->Pin,  P2M0 &= ~GPIOx->Pin;     //浮空输入
  39   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P2M1 |=  GPIOx->Pin,    P2M0 |=  GPIOx->Pin;     //开漏输出
  40   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P2M1 &= ~GPIOx->Pin,    P2M0 |=  GPIOx->Pin;     //推挽输出
  41   2              }
  42   1              if(GPIO == GPIO_P3)
  43   1              {
  44   2                      if(GPIOx->Mode == GPIO_PullUp)          P3M1 &= ~GPIOx->Pin,    P3M0 &= ~GPIOx->Pin;     //上拉准双向口
  45   2                      if(GPIOx->Mode == GPIO_HighZ)             P3M1 |=  GPIOx->Pin,  P3M0 &= ~GPIOx->Pin;     //浮空输入
  46   2                      if(GPIOx->Mode == GPIO_OUT_OD)          P3M1 |=  GPIOx->Pin,    P3M0 |=  GPIOx->Pin;     //开漏输出
  47   2                      if(GPIOx->Mode == GPIO_OUT_PP)          P3M1 &= ~GPIOx->Pin,    P3M0 |=  GPIOx->Pin;     //推挽输出
  48   2              }
  49   1               
  50   1              return 0;       //成功
  51   1      }
  52          
  53          void GPIO_config(void)
  54          {
C51 COMPILER V9.01   GPIO                                                                  04/28/2016 00:03:55 PAGE 2   

  55   1       
  56   1         P1M0 = 0x00;
  57   1         P1M1 = 0xFF;
  58   1         P2M0 = 0x00;
  59   1         P2M1 = 0xFF;
  60   1         P3M0 = 0x00;
  61   1         P3M1 = 0x10;
  62   1      }
  63          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    325    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
